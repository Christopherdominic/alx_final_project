{"ast":null,"code":"var _jsxFileName = \"/root/final_alx_project/movie-recommendation-app/alx_final_project-master/src/MovieSearch.js\",\n  _s = $RefreshSig$();\n// In your MovieSearch component\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearch = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [loading, setLoading] = useState(false);\n  const API_KEY = '504a45076accb0f6d28e87336662450d';\n  useEffect(() => {\n    async function fetchGenres() {\n      const genreData = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`);\n      setGenres(genreData.data.genres);\n    }\n    fetchGenres();\n  }, []);\n  const searchMovies = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&with_genres=${selectedGenre}`);\n      setMovies(res.data.results);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedGenre(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: genre.id,\n        children: genre.name\n      }, genre.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchMovies,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.title\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSearch, \"GL5YM97K2ucCgoSZHK57RvHZcgI=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MovieSearch","_s","movies","setMovies","query","setQuery","genres","setGenres","selectedGenre","setSelectedGenre","loading","setLoading","API_KEY","fetchGenres","genreData","get","data","searchMovies","res","results","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","id","name","onClick","movie","title","_c","$RefreshReg$"],"sources":["/root/final_alx_project/movie-recommendation-app/alx_final_project-master/src/MovieSearch.js"],"sourcesContent":["// In your MovieSearch component\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst MovieSearch = () => {\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState('');\n    const [genres, setGenres] = useState([]);\n    const [selectedGenre, setSelectedGenre] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const API_KEY = '504a45076accb0f6d28e87336662450d';\n\n    useEffect(() => {\n        async function fetchGenres() {\n            const genreData = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`);\n            setGenres(genreData.data.genres);\n        }\n        fetchGenres();\n    }, []);\n\n    const searchMovies = async () => {\n        setLoading(true);\n        try {\n            const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&with_genres=${selectedGenre}`);\n            setMovies(res.data.results);\n            setLoading(false);\n        } catch (error) {\n            console.error('Error searching movies:', error);\n        }\n    };\n\n    return (\n        <div>\n            <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} placeholder=\"Search movies...\" />\n            <select onChange={(e) => setSelectedGenre(e.target.value)}>\n                <option value=\"\">All Genres</option>\n                {genres.map(genre => (\n                    <option key={genre.id} value={genre.id}>{genre.name}</option>\n                ))}\n            </select>\n            <button onClick={searchMovies}>Search</button>\n\n            {loading ? <div>Loading...</div> : (\n                <ul>\n                    {movies.map(movie => (\n                        <li key={movie.id}>{movie.title}</li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default MovieSearch;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}